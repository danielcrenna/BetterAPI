@page "/health"
@using BetterAPI.Health
@using System.Text.Json
@using System.Text.Json.Serialization
@inject HttpClient Http
@inject IConfiguration Configuration

<h1>Health</h1>

@if (_report == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (_report.Entries == null || _report.Entries.Count == 0)
    {
        <Alert>No health checks found.</Alert>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Status</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var (name, entry) in _report.Entries)
            {
                <tr>
                    <td>@name</td>
                    <td>@entry.Status</td>
                    <td>@entry.Description</td>
                </tr>
            }
            </tbody>
        </table>
    }
}

@code {
    private HealthReportViewModel _report;

    protected override async Task OnInitializedAsync()
    {
        var json = await Http.GetStringAsync("api/health");
        var options = new JsonSerializerOptions(JsonSerializerDefaults.Web);
        options.Converters.Add(new JsonStringEnumConverter(JsonNamingPolicy.CamelCase));
        var model = JsonSerializer.Deserialize<One<HealthReportViewModel>>(json, options);
        _report = model?.Value;
    }
}